Reading point coordinates...
Extracting Gradient of  Pressure  in the x-direction...
Extracting Gradient of  Pressure  in the y-direction...
Done! Elapsed time 0.0054209232330322266 s
Reading point indices...
Done! Elapsed time =  0.0004863739013671875 s
Compute cell volumes/areas of all of the cells...
Computing Cells volumes...
N of lines:  939
Done! Elapsed time  0.00016188621520996094 s
Extracting Neighbors points...
Analyzing  939  points...
Arrays created.. Now we store neighbors and cells CellsOfPoint structure
Cells analyzed:  0
Elapsed time  0.0011065006256103516 s
Computing if a point is inside the prescribed bounding box...
Done!  939  found inside the box,  0  found outside. Elapsed time =  0.0002353191375732422  s
Computing initial metric...
Done! Elapsed time  0.0009753704071044922 s
np.mean(avg_S) =  0.01539417717463613
np.std(avg_S) =  0.04602334540488246
Computing Cells volumes...
Done! Elapsed time =  3.4809112548828125e-05  s
Current complexity of region to adapt =  161504.14523665025
N of points requiring more than 1.1 = 778
Total number of points to coarse =  795 , Total number of points to refine =  144
Smoothing the metric distribution...
Done! Elapsed time  9.5367431640625e-05 s
Final AdaptedComplexity =  455831.56916370324
A complexity ratio of 2.0 has been requested
Current complexity ratio =  2.8224140531859305
Modify metric to enforce desired complexity ratio
Reached an error = 0.0007038433881546569 after 7 iteration
Final complexity ratio = 1.9985923132236907
N of points hitting max spacing =  0   N of points hitting min spacing =  78
Total elapsed time =  0.01706552505493164 s
