Reading point coordinates...
Extracting Gradient of  Pressure  in the x-direction...
Extracting Gradient of  Pressure  in the y-direction...
Done! Elapsed time 0.013328075408935547 s
Reading point indices...
Done! Elapsed time =  0.0013794898986816406 s
Compute cell volumes/areas of all of the cells...
Computing Cells volumes...
N of lines:  3720
Done! Elapsed time  0.00876164436340332 s
Extracting Neighbors points...
Analyzing  3720  points...
Arrays created.. Now we store neighbors and cells CellsOfPoint structure
Cells analyzed:  0
Elapsed time  0.011098861694335938 s
Computing if a point is inside the prescribed bounding box...
Done!  3720  found inside the box,  0  found outside. Elapsed time =  0.0011668205261230469  s
Computing initial metric...
Done! Elapsed time  0.004970550537109375 s
np.mean(avg_S) =  0.0012941978416635873
np.std(avg_S) =  0.004776638937252313
Computing Cells volumes...
Done! Elapsed time =  0.0001392364501953125  s
Current complexity of region to adapt =  469791.15533486404
N of points requiring more than 1.1 = 2957
Total number of points to coarse =  3010 , Total number of points to refine =  710
Smoothing the metric distribution...
Done! Elapsed time  0.0006492137908935547 s
Final AdaptedComplexity =  1044558.5320799828
A complexity ratio of 2.0 has been requested
Current complexity ratio =  2.223452953973619
Modify metric to enforce desired complexity ratio
Reached an error = 0.0006872171688010464 after 6 iteration
Final complexity ratio = 1.998625565662398
N of points hitting max spacing =  0   N of points hitting min spacing =  317
Total elapsed time =  0.14846086502075195 s
