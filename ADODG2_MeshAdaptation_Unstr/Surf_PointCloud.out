Reading point coordinates...
Extracting Gradient of  Pressure  in the x-direction...
Extracting Gradient of  Pressure  in the y-direction...
Done! Elapsed time 0.003536224365234375 s
Reading point indices...
Done! Elapsed time =  0.00031256675720214844 s
Compute cell volumes/areas of all of the cells...
Computing Cells volumes...
N of lines:  332
Done! Elapsed time  0.000110626220703125 s
Extracting Neighbors points...
Analyzing  332  points...
Arrays created.. Now we store neighbors and cells CellsOfPoint structure
Cells analyzed:  0
Elapsed time  0.00035834312438964844 s
Computing if a point is inside the prescribed bounding box...
Done!  332  found inside the box,  0  found outside. Elapsed time =  0.00017547607421875  s
Computing initial metric...
Done! Elapsed time  0.0005941390991210938 s
np.mean(avg_S) =  0.11394783806790325
np.std(avg_S) =  0.2348602498117352
Computing Cells volumes...
Done! Elapsed time =  2.3603439331054688e-05  s
Current complexity of region to adapt =  19228.61138079787
N of points requiring more than 1.1 = 255
Total number of points to coarse =  267 , Total number of points to refine =  65
Smoothing the metric distribution...
Done! Elapsed time  6.151199340820312e-05 s
Final AdaptedComplexity =  25361.562939259748
A complexity ratio of 2.0 has been requested
Current complexity ratio =  1.318949269762994
Modify metric to enforce desired complexity ratio
Reached an error = 6.326312856685945e-06 after 1 iteration
Final complexity ratio = 2.0000126526257134
N of points hitting max spacing =  1   N of points hitting min spacing =  0
Total elapsed time =  0.008442163467407227 s
